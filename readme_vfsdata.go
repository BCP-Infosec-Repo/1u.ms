// Code generated by vfsgen; DO NOT EDIT.

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Readme statically implements the virtual filesystem provided to vfsgen.
var Readme = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2021, 2, 27, 20, 30, 27, 280895565, time.UTC),
		},
		"/index.html": &vfsgen۰CompressedFileInfo{
			name:             "index.html",
			modTime:          time.Date(2021, 2, 27, 20, 30, 27, 436895702, time.UTC),
			uncompressedSize: 8384,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x59\xeb\x72\xdb\x38\x74\xfe\xef\xa7\x38\xd5\x74\x92\x78\xd6\x24\x2d\x29\x76\x6e\xb6\x76\x1d\x3b\x99\x78\xea\x24\xde\xb5\xb2\x49\xfa\xa7\x03\x91\x87\x24\x6c\x10\x60\x70\x91\x44\xff\xea\x43\xf4\x09\xfb\x24\x1d\x5c\x48\xd1\x92\x9c\xda\xbb\xdb\xe9\x8f\x4c\x2c\xe0\x00\x38\xd7\xef\x5c\x78\xf4\x2f\x67\x9f\x4f\xa7\xdf\x2f\xdf\x41\xa9\x2b\x06\x97\x5f\xde\x5e\x9c\x9f\xc2\x20\x4a\x92\xaf\xe3\xd3\x24\x39\x9b\x9e\xc1\xb7\x0f\xd3\x8f\x17\x30\x8c\xf7\x61\x2a\x09\x57\x54\x53\xc1\x09\x4b\x92\x77\x9f\x06\x30\x28\xb5\xae\x5f\x27\xc9\x62\xb1\x88\x17\xe3\x58\xc8\x22\x99\xfe\x91\x2c\xed\x5d\x43\x7b\x38\xfc\x19\xe9\xde\xc9\x38\xd3\xd9\x60\xb2\x73\xe4\x1e\x5c\x56\x8c\xab\xe3\x2d\xd7\x0c\x5f\xbd\x7a\xe5\x4f\x3b\x5a\x24\xd9\x64\x07\xe0\xa8\x42\x4d\xc0\x52\x47\xf8\xc3\xd0\xf9\xf1\xe0\x54\x70\x8d\x5c\x47\xd3\xa6\xc6\x01\xa4\xfe\xd7\xf1\x40\xe3\x52\x27\xf6\xf4\x1b\x48\x4b\x22\x15\xea\x63\xa3\xf3\xe8\xe5\x00\x92\x9f\xdf\x73\xa5\x1b\x86\x5b\x6f\x4b\x95\xba\x73\x9a\x93\x0a\x8f\x07\x05\x72\x94\x44\x0b\xd9\x23\xaf\x09\xcf\x44\xda\x12\x6b\xaa\x19\x4e\x86\x26\xae\xd4\x51\xe2\x7f\xd8\x65\x46\xf9\x0d\x48\x64\xc7\x03\x65\x9f\x54\x25\xa2\x1e\x40\x29\x31\xf7\xea\x50\xaf\x93\x24\xcd\xf8\xb5\x8a\x53\x26\x4c\x96\x33\x22\x31\x4e\x45\x95\x90\x6b\xb2\x4c\x18\x9d\xa9\xa4\xa0\xba\x34\xb3\xa8\x22\xf2\x26\x13\x0b\x1e\xa5\x4a\x25\xe3\x78\x3f\x1e\xae\xef\xc4\x15\xe5\xb1\xe3\x5f\x37\x35\x6e\xca\xa3\x52\x49\x6b\x0d\x4a\xa6\x0f\x7e\xbb\xa4\x45\xc9\x68\x51\xea\xf8\x5a\x25\xaf\xe2\xe1\x41\x3c\xdc\xef\x2d\xda\x07\xaf\xd5\x00\x28\xd7\x58\x48\xaa\x9b\xe3\x81\x2a\xc9\xe8\xe0\x30\x1a\xde\x9a\x5f\xc6\x6f\xf9\xc5\xf7\x3f\x5f\x5d\x64\xf4\xfb\xcb\x03\xf3\xed\xe3\x2d\xa5\xe3\x59\x26\x6f\x90\x35\xf5\xf8\x05\xee\xff\x7b\x33\x3d\xf9\xbd\xdc\x3f\x1e\x40\x2a\x85\x52\x42\xd2\x82\xf2\xe3\x01\xe1\x82\x37\x95\x30\x6a\x30\x39\x4a\x3c\xcf\xff\x28\xfb\x8c\xf0\xc2\x90\x02\x55\xa2\x4a\x64\xec\x27\x42\xf0\xc5\xe7\x8f\xe3\xe5\xbb\xf4\xf0\xf4\x7d\x2e\x2f\x3f\x9d\x7d\x1a\x9a\xfa\xdb\x2f\x07\x0d\xbf\xfe\xfa\x6f\x27\xdf\x54\xf1\xcb\xec\xeb\xe1\xf8\xea\xea\x56\xe3\xc3\x84\xf8\x27\xbc\x61\xab\x48\xfe\xb6\x24\xc3\x9c\x18\xa6\x57\x7e\xb0\x29\xd2\x6d\x6a\xf8\x8f\x2b\x3e\x64\xac\x38\x39\x23\xe7\x97\xef\x9b\x5b\xf9\xfb\xcb\x2f\x57\xe7\xd7\xdf\x46\x7f\xd6\x66\xf9\xe1\xf6\xcb\xe2\x3b\x55\x9f\x17\xe2\xe5\xfd\x22\x41\x32\x81\x95\x45\x26\x25\xbb\x56\x31\xe5\x54\x7f\x68\x79\xa3\xbc\xf8\xcc\x2f\x04\xc9\x9e\xed\xbe\xe9\x89\x9f\xf8\x00\x3f\x9a\x89\xac\x81\x94\x11\xa5\x8e\x07\x9d\x5b\xdb\x45\x07\x02\xc3\x36\x8a\xca\xa1\xfd\x39\x9a\x7c\x2d\x89\x06\xaa\x40\x97\xd4\xae\x8e\x26\x3b\x47\xf5\x64\x5a\x52\x65\x17\x09\xa8\x8a\x30\x06\x0a\x35\x88\x1c\x6e\x51\x8a\x28\x15\x3c\xa7\x85\x91\xc4\x42\x11\x9c\x7d\xba\x02\xa3\x29\xa3\x9a\xa2\x82\x5c\x48\x20\x4a\x51\x65\x99\x04\xca\x21\x43\x8d\xa9\x23\x24\x3c\x03\x5c\xd6\x4c\x50\xed\x4f\x8a\x1c\xae\xae\xfe\x78\x1f\x49\x64\x44\x63\x06\x73\xc3\x2c\x0c\xcc\xc2\x5d\x31\x9c\x6b\xa8\xa5\x98\xd3\x0c\x15\x20\x51\x0d\x68\x01\x46\xa1\x7b\x52\xe2\x8c\xf2\xcc\x3e\xe2\x1f\x6f\xf6\x80\x28\x58\x20\x63\xf6\x7f\x02\x0b\xe2\xc8\x0b\xd4\x20\x51\x09\x36\x27\x33\x86\xee\x4f\x23\x53\xfb\x47\x2a\x64\xa6\x60\x41\x75\x09\x84\x37\x50\xd0\x39\xf2\x16\x7d\x54\x7c\x94\xd4\x41\x0f\x08\x5a\x08\x06\x99\x40\x05\x5c\x68\xc0\xaa\x66\xa2\x71\x67\xb8\x98\x23\x03\x8d\x69\xc9\xe9\x0f\x83\xca\x89\x48\x3d\x99\x71\x4b\x56\x03\x96\x52\x21\x57\x18\xc3\x09\x63\x90\x23\xd1\x46\x5a\x62\x89\xa0\x25\x9d\x53\xc2\x2c\xa7\xb4\xaa\x19\x56\xc8\xb5\xbb\x25\x25\x1c\x66\x68\xa5\xa6\xac\x81\x5c\x18\x7b\x33\x07\xa1\x4b\x94\xa0\x68\x45\x19\x91\x8e\xb1\xbb\xac\x2a\x94\x73\x9a\xa2\x65\x22\x35\x52\x22\xd7\xac\x01\x69\x38\x10\x0d\xba\x44\x38\x22\x6b\xe1\xe0\x7c\x21\x19\xb4\x3e\x41\x26\x90\x89\x8a\x50\x0e\xcf\x9c\x2c\x5a\x3d\x05\x65\x66\x7e\x4d\xed\x76\x6f\x9d\xe7\xd0\x08\xf3\x54\x5a\x45\x12\x67\x05\xeb\x3d\x20\x38\x78\xd0\xdc\x6b\xb7\x0b\xe1\x36\x05\x94\x64\x8e\x30\x47\xd9\x40\x49\x64\x06\x9a\x56\x56\xfa\x26\xec\x2a\x64\x79\x54\x0a\xa5\x81\xea\x18\xac\x24\xa9\xc8\x9c\x18\xaa\xa4\x5a\x37\xd6\xa6\x0e\x4d\xe0\x4a\x13\xa9\xbd\xd9\x8e\x2c\xcd\x24\x58\x32\x2e\xc4\x51\xe2\x16\x9c\xfe\xfc\x5e\xd5\x64\xbc\xb7\x13\xc3\xa5\x61\x0c\x24\x5a\x63\x69\x6f\x81\x05\xb2\x54\x54\x08\xaf\x77\xbd\x6c\xe5\x68\xf2\x45\x91\x02\x43\x24\x94\xcf\x27\x27\x91\x7f\xe2\x28\x29\x9f\xf7\x84\x87\x05\xe1\xba\x75\x31\x12\x1c\x0a\xb4\x0d\x26\xef\x70\xa8\xec\x2e\xe1\x70\x7e\xb9\xe7\xdc\xd6\x1a\x20\x17\x8c\x89\x85\x95\xba\x53\xeb\xeb\x56\xa9\x81\x67\x72\x83\xd1\x13\xa6\xdf\x9c\x5f\x3e\x29\xf4\x9b\x48\xca\x38\x18\xc7\x6d\xb7\xc4\xef\x85\x04\x5c\x12\xeb\x34\x7b\xad\xcd\x7a\x17\x0c\xe3\x51\x3c\x8e\x9f\xaf\x9f\xbe\xc3\x9a\x27\x0f\x94\x81\xa0\x65\x46\x62\x8b\x20\x0e\xc5\x07\x81\xb9\x7f\x05\x67\xa4\x48\xc3\x09\x6c\x7d\x67\x67\xeb\x2a\x94\x36\x26\xb3\x4c\xa2\x52\x10\x36\x77\x56\x02\x49\x74\x22\x7d\x17\xc6\xf9\xbd\xd5\x55\x46\x54\x89\x0a\x28\x57\x1a\x49\x66\xa1\x22\x13\xd6\x62\x0a\x98\xe0\x85\xfd\xdf\x6a\xf3\xfc\xd2\xba\xc8\x9c\x30\x9a\x3d\x9a\xf1\x68\x14\x8d\xa3\x0d\xc6\xd7\x56\x1f\xc7\x78\xcd\x48\x8a\xa0\xac\x3b\x85\xf0\xaf\x25\xe6\x74\x99\x28\x93\xe7\x74\x09\x33\xcc\x85\xc4\x9e\x99\x5a\xab\x58\xd0\xcc\x35\xca\xd6\xa5\x65\xbb\xf1\xcc\x4b\x2d\x11\x88\xf5\x1b\xcc\x76\x1f\x21\x27\x89\xfd\xf3\xd1\x9a\x68\x11\xe1\x59\x4c\x22\xcf\x54\x90\xfe\x11\xb4\x0f\xd3\xc9\x47\xc3\x34\xad\xd9\x0a\x69\x03\xa2\x29\xac\x89\x74\x70\x3f\x6b\x82\xb8\xf6\x8d\xe8\xaf\xfa\x5f\xe0\xd4\x5e\x71\x10\x1d\x46\x2f\xa2\x97\xf7\x98\x74\x1b\xc5\x56\x51\x1e\x77\xea\x20\x3e\x8c\x5f\xc4\x2f\xd7\x15\x50\x3e\x9f\xdc\xc9\x52\x2b\xf0\xe0\xce\x73\x5d\xa2\x59\xea\x36\x07\xc2\xcc\x14\x6a\x6f\x2d\xb1\xb9\xf4\x6b\x33\x5a\x74\xc3\xc5\x82\xaf\x12\x0d\x68\x22\x0b\x74\x19\x76\xfa\xf9\x74\xfa\xf9\x8b\xab\x48\xed\x5d\x6b\x29\x14\x32\x23\x2d\xd5\xf9\x25\xcc\x18\x49\x6f\x58\xc8\xcb\x42\xc2\xa2\xa4\x1a\xc3\x6f\x97\x69\xa9\x82\x1a\x65\x2e\x64\x85\x19\x18\x65\xc9\x48\x0b\x2c\x77\x51\xcd\xe6\x34\x60\x58\x50\x6d\x2f\x0e\x4f\x38\x70\xa3\x52\xe9\x16\x5e\xe1\x59\x5a\x62\x7a\xb3\xeb\xe0\x58\x8b\x80\x7e\x72\x46\xb3\x0c\x39\x08\x8e\xfd\x93\x0a\x53\xc1\xb3\xd5\x51\xa3\x70\x95\x6c\xa6\x16\x63\x5d\x83\x80\x2b\x96\x6c\xe3\xe0\xd3\x80\xcb\x3c\x33\x2c\xc9\x9c\x0a\xb9\x15\x69\x1b\xae\xc9\xf2\x7e\x98\x1d\x7a\x9c\x75\x7a\x0f\x4b\xa3\x07\x43\xaf\x7d\xaa\xcf\xd2\x36\x0c\xf6\x37\x0f\x0f\x5f\xc5\xa3\x83\xe7\xdd\xff\xeb\xd0\xbc\xa0\xb6\x3a\x08\x2a\x74\xaa\xbe\x0f\xa4\xbd\x4a\x4b\xe4\x3d\x02\x7f\x69\x1c\xfe\xff\xbb\x68\xfe\x73\x8e\x77\x1e\x43\xbc\x35\xc6\xfe\x1f\x5e\xbe\xab\xa0\x4d\xc0\xb2\x45\x07\x13\x05\x4d\xad\x2f\x51\xaf\xe0\xb6\x58\x73\xa1\xa8\x82\x4b\xa9\xa0\x55\xc3\x5a\xa5\x52\x9e\x4a\x57\xba\x11\xd7\x67\x33\x3a\xa1\xb9\x3d\xee\xca\x0b\x89\xc0\xc5\xaa\xe6\x70\x91\x40\x55\xeb\x33\x21\x06\x18\x51\x1a\x0e\x42\x18\xa8\x3d\xa0\xfa\xa9\x6a\xbd\x60\x15\x3d\xce\x37\xce\x2f\xdf\x1c\x25\x8c\xfa\x77\x5c\x3d\xb8\xa0\x0a\xef\x39\x12\xe2\x4a\x70\x8c\xc3\xa1\xc4\xb0\x8d\x64\xeb\xa1\x1f\xd5\x66\x82\x8a\xfa\x1e\x17\xb2\x58\x3f\x53\x45\xab\x54\x65\xab\x53\x99\xa1\x74\x45\xba\x85\x29\xc2\xe8\x2d\x6e\xc4\xc7\x33\x8c\x8b\x38\x9c\xbe\x93\x72\xfe\x37\x9b\xde\xc9\x41\xe1\xd1\x5d\x5f\x2b\xda\x62\x52\x98\x90\x28\xdb\x04\xe3\x5a\x11\x24\x69\xd9\x7f\x7e\xad\x80\x05\x8e\x5e\x57\x69\x49\x78\x11\x98\xf5\x5d\xde\xca\x1a\xed\xf5\x7f\x17\x5a\x72\x21\xed\xa2\x6d\x1a\xe5\x9c\x30\xb7\xf3\x00\xb4\x59\x38\x3f\xf2\x37\xaf\x9f\xef\x74\xaf\x5c\xd5\xa1\x4b\xe7\x4b\xf4\xa6\xa5\x1f\xee\x77\xe8\xf2\x6c\xb8\xdf\x0a\xb4\x6b\xf1\xdf\x13\x1c\x54\xdd\xfe\x01\x54\x94\x1b\x8d\x1b\x55\x7e\x50\x92\x4d\x01\x83\x2e\x6b\x60\x36\xb0\xe0\xff\x6c\x51\xd2\xb4\xb4\xef\x9f\x5f\x0e\x9d\x0b\x98\x0e\x1b\xd5\xae\xcd\xf7\x12\xb5\x91\x1c\x33\xa8\xda\x82\xc0\xaa\xb3\x73\xb5\x2e\xdb\xfd\x1f\x68\xd7\x39\xea\xc8\x3d\xf7\x68\x58\xbf\x17\xc6\x73\x21\xc7\xfb\xaa\x7f\xf5\x70\xf4\x22\xde\x8f\xf7\xe3\xe1\x76\x44\x6f\xb1\xbc\xab\xcf\xd7\xb0\xdc\x47\xb5\x5e\x08\xaf\x98\xbd\x15\xb8\xdf\x73\xbc\x7d\xae\xbb\x40\x48\xe0\xb6\x96\x18\x77\x16\x0e\x16\xb4\xcd\xcb\xc9\xc9\x46\xff\x32\x15\x0e\x73\xc1\xd4\xf7\x65\x78\xc1\x59\xd3\x35\x2f\xf3\xc3\x16\x44\x1f\x67\x23\x5a\x47\xf3\xc3\x07\x74\x32\xa7\x82\x09\xae\xa0\x32\x4a\x7b\x87\x71\x65\x74\xe6\x93\x3b\x43\xbd\x42\x9b\xb4\xeb\xe3\x4e\x14\x10\xb6\x20\x8d\xda\x03\x49\x78\x26\xaa\x80\x61\x7d\x9c\x0a\x05\xa7\x51\xf8\x88\xe6\xe0\xe4\xe4\x04\xfa\xb0\xe4\x85\x18\xa6\xa3\x34\x1d\xaf\x83\xd0\xce\x43\x09\x5d\x22\xea\x2b\x12\x86\xaf\x47\xaf\x5f\x8f\xb7\x14\x8d\xa7\x9f\x4e\x3e\xbe\x53\x9d\xa9\xde\x36\x2d\x1e\xed\x81\xe1\x35\x91\xca\x8d\x31\xc2\x35\x61\x88\x90\x0a\xae\x68\x86\x12\x33\x9b\xa4\xfc\x0d\x0f\x93\xd8\x71\x1e\x7c\x3e\x4e\x45\xb5\x96\x67\xb7\xed\xb8\x54\xc8\x81\x30\x4a\xfc\xb4\xa7\x47\x14\xef\xc4\x71\xbc\x25\xb3\x0a\x4b\x98\xf6\x8a\x37\x2d\xac\x65\x88\xe7\x75\xcf\x8a\xd3\x5a\xd8\x82\x74\x97\x74\xbc\x7e\x1f\x5b\xc4\xf8\x3b\xee\x97\xea\xfe\xfd\xbf\x20\xdb\x27\xa1\xd1\x07\x8f\xd7\xbb\xf3\x5a\x61\x34\x74\x8d\xdb\x5d\xeb\xac\x86\x29\xde\xbf\x0d\x6f\xa7\x5f\x5e\x1a\x65\x66\xb1\x2a\xe3\xeb\xae\x35\x6c\xc7\x31\x4a\x9b\x9a\x66\xab\x29\x91\x1f\xa1\x65\xa8\x09\x65\xbb\x7b\xd0\xe1\x70\x2d\xc5\x8c\xcc\x58\xe3\x86\x50\x0b\xcb\x58\x3b\xab\x78\xac\x1e\x99\x48\x09\xb3\x6b\x6b\xfa\xdb\x5c\xdf\xd0\x5b\x47\x12\x77\xf2\x6c\xe8\xae\x7c\x3e\xf9\xec\xa6\x59\xed\xe4\xa4\xa9\x51\xf5\x67\x2c\x16\x67\x7c\x46\x9b\xa1\x5e\x20\xf2\xfb\xea\x92\xcd\x52\xc4\x36\x4e\x5d\xb0\xf8\xfb\x6d\x81\x64\x37\xba\x7c\xe4\x26\x95\xbc\xe9\x5a\xa7\x50\xa1\xc5\x0f\xd5\xd2\xf4\xdb\xd4\xeb\x69\xc6\x48\x69\xff\xad\xa9\x69\x63\x19\x32\xf4\xa3\x5a\x6a\x2b\x7b\x0b\xd8\x4f\x7e\x18\xa1\xdf\xb4\x84\xfe\xd7\x16\x35\x7d\xc0\x25\x20\x4f\xc5\x9d\x3e\xb2\xad\xdf\xdc\x06\xae\x7a\x4a\xae\x95\x95\xa6\x1b\x48\x51\x0e\x25\x7a\x5c\xb4\x61\x46\x82\xb6\x4a\x5c\xae\x85\xd9\x9d\xba\xae\xaf\xe3\xc7\xfa\x8d\xbd\x7a\x3c\x1c\xe1\x78\x34\xc2\xf1\x78\x84\xe3\xf5\xf2\xfd\x27\x04\x0f\x99\x2d\x94\xcf\x7d\xd4\x85\xd9\xf3\x74\x7a\xb1\x72\x9b\x2b\x51\xf9\x21\x28\x4a\xe5\x46\xb6\xfc\xa9\xee\x06\x75\x25\xe1\x19\x43\x37\xc3\xb6\xa7\x5c\xa6\x71\x73\xe6\xb3\x50\xf2\xd9\x45\xaa\x60\xe8\x7c\x63\x10\x66\xa9\x03\x68\x03\xd6\xea\x70\xdf\xed\xb9\xb2\x5b\xad\xd7\x49\xed\x3b\xa1\x98\x9c\x4e\x2f\xfa\xd0\xa6\x50\xbb\x64\xc8\x4d\x35\x43\xe9\x12\xa2\xd6\x6c\xe5\xc7\x8d\x2f\xf4\x28\x5f\x2f\x99\x57\xc9\xfc\x42\x14\x30\xa7\xb8\xe8\xfb\x41\x68\x5b\x9c\xcd\x19\x0b\x13\x84\xd0\x6b\x58\x38\x30\x33\x46\x53\x57\x26\x4b\xf4\x23\xe7\x3b\xe9\x1b\x79\x56\x0b\xca\xf5\x43\x9a\x9a\x3b\xc3\xe3\x6e\x76\x6c\x5b\x97\xc1\x64\x63\xc9\xcd\x92\xff\xfb\x3f\xff\xcb\x0d\xd6\x95\x6f\x70\x86\xfb\xfb\x1d\x73\xab\x1e\xe6\xee\x51\x51\xb8\x53\x84\x03\xe5\x39\xe5\x54\x5b\xf1\xfc\x88\xb9\x26\x45\x68\xf9\xc3\x6c\xdb\x09\x1e\xe6\x4b\x7b\xfd\xba\xd7\x82\x22\x44\x79\x57\x2e\x9c\xdb\xc0\xc8\xdc\x5c\xc3\xde\x61\x61\xc0\x70\x6e\xef\x0c\x69\xc7\x48\x06\xeb\x7c\xf4\x1a\x1b\x02\x1a\x65\x45\x39\x61\x16\x68\x99\x35\x8f\x3d\xdc\xf8\x6a\xb7\x46\x49\xab\xf0\xd5\xe0\x3e\xa1\x7e\x2d\x24\xd6\xc7\xd6\xfe\x12\x0b\x5c\xd6\xd6\xfe\x4e\x50\x65\x9b\x22\xeb\xf4\x33\x31\xc7\x3d\x98\x19\x0d\xaa\x14\x0b\x5f\x82\x55\x44\xa7\xa1\xa6\xe7\xa8\xee\x74\x70\xe5\x68\x72\x2a\xb8\x26\xa9\x56\xf0\x84\x54\xf5\x1b\x78\x7f\xf2\x7b\xf7\xf9\x26\x78\xa4\x1b\xba\x5b\x90\x73\x3a\xa7\xb6\xcc\x12\x12\x94\x29\x8a\xf6\x27\xe5\xb6\xec\xcf\xf6\x20\x47\x64\x90\x4b\x74\x43\x87\xd4\xdf\x0c\x15\xc2\x9c\x92\xcd\xaf\x06\x3a\xae\x30\xe1\x88\x4b\xac\x28\x1b\x4c\x7e\x6b\xff\x74\x46\x17\x1c\xa6\xc8\xb0\x90\xa4\x72\x8d\xc6\xc6\xe1\x05\xb5\x35\x9d\xfb\xf0\x66\x0f\xfd\x07\x43\xc9\x51\x0e\x26\xbf\xf5\x7e\x75\x37\x05\xe2\x2e\x06\xce\xfd\x87\x2a\xff\x51\xc6\xf1\xbb\x0e\xe4\xce\xc6\xbf\xae\x20\xc1\xc8\x5e\x08\xbd\x35\x21\x2b\xd2\x1c\xce\x5d\x39\x4b\x75\xdb\x84\xbb\xc1\x2d\x65\x0c\x0b\xc2\x80\x64\x73\xe4\xae\xf7\x17\x12\xce\xce\xc4\x95\x25\xf4\x5f\x8b\xa0\x34\x05\x02\xa9\x84\xe1\x6e\x80\xa7\x25\xc9\x73\x9a\xfe\xda\x8f\x49\xe5\x83\x8d\x2c\x72\xc3\x80\x66\x48\x54\x48\xd1\xe7\x90\x09\x0b\x4a\xd6\x5b\x7b\x52\x3d\x9d\xfb\x4f\x29\x01\xc8\x33\x74\x68\xe3\xec\x97\x0a\x9e\x32\x93\xb5\x3d\x58\xf8\xb0\x42\x80\x0b\x31\x6b\x27\x77\xae\xd7\x2f\xa9\xd6\x14\x95\xfb\x68\xe6\xb4\x8f\x73\xa7\xb9\x0e\x1b\xa5\x6c\xc2\x93\xc9\x4c\x64\xcd\xe4\xc8\x7d\xdc\x9f\xec\xfc\x4f\x00\x00\x00\xff\xff\x01\x5c\xf6\xad\xc0\x20\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/index.html"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
