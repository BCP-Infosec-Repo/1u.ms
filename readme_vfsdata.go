// Code generated by vfsgen; DO NOT EDIT.

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Readme statically implements the virtual filesystem provided to vfsgen.
var Readme = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2021, 2, 27, 20, 28, 41, 732745477, time.UTC),
		},
		"/index.html": &vfsgen۰CompressedFileInfo{
			name:             "index.html",
			modTime:          time.Date(2021, 2, 27, 20, 28, 41, 896745806, time.UTC),
			uncompressedSize: 8368,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x59\xed\x52\xdb\x48\xd6\xfe\xcf\x55\x9c\xd7\xf5\x56\x12\x6a\x90\x84\xed\x40\x12\x02\x9e\x21\x90\x54\xa8\x97\x24\xcc\xe0\x4c\x92\xf7\xcf\x56\x5b\x3a\x92\x1a\x5a\xdd\x4a\x7f\xd8\x16\xbf\xf6\x22\xf6\x0a\xf7\x4a\xb6\xfa\x43\xb2\xb0\x21\x0b\x33\xb3\xb5\x3f\x28\x2c\xf5\xe9\xd3\xe7\xab\x9f\xf3\xa1\xc3\xff\x39\xfd\x74\x32\xfd\x76\xf1\x16\x4a\x5d\x31\xb8\xf8\xfc\xe6\xfc\xec\x04\x06\x51\x92\x7c\x19\x9f\x24\xc9\xe9\xf4\x14\xbe\xbe\x9f\x7e\x38\x87\x61\xbc\x0b\x53\x49\xb8\xa2\x9a\x0a\x4e\x58\x92\xbc\xfd\x38\x80\x41\xa9\x75\x7d\x90\x24\x8b\xc5\x22\x5e\x8c\x63\x21\x8b\x64\xfa\x5b\xb2\xb4\xbc\x86\x76\x73\xf8\x19\xe9\xde\xce\x38\xd3\xd9\x60\xb2\x75\xe8\x0e\x5c\x56\x8c\xab\xa3\x3b\xd8\x0c\x5f\xbd\x7a\xe5\x77\x3b\x5a\x24\xd9\x64\x0b\xe0\xb0\x42\x4d\xc0\x52\x47\xf8\xdd\xd0\xf9\xd1\xe0\x44\x70\x8d\x5c\x47\xd3\xa6\xc6\x01\xa4\xfe\xe9\x68\xa0\x71\xa9\x13\xbb\xfb\x35\xa4\x25\x91\x0a\xf5\x91\xd1\x79\xf4\x72\x00\xc9\x8f\xf9\x5c\xea\x86\xe1\x9d\xdc\x52\xa5\x6e\xed\xe6\xa4\xc2\xa3\x41\x81\x1c\x25\xd1\x42\xf6\xc8\x6b\xc2\x33\x91\xb6\xc4\x9a\x6a\x86\x93\xa1\x89\x2b\x75\x98\xf8\x07\xfb\x9a\x51\x7e\x0d\x12\xd9\xd1\x40\xd9\x23\x55\x89\xa8\x07\x50\x4a\xcc\xbd\x39\xd4\x41\x92\xa4\x19\xbf\x52\x71\xca\x84\xc9\x72\x46\x24\xc6\xa9\xa8\x12\x72\x45\x96\x09\xa3\x33\x95\x14\x54\x97\x66\x16\x55\x44\x5e\x67\x62\xc1\xa3\x54\xa9\x64\x1c\xef\xc6\xc3\xf5\x95\xb8\xa2\x3c\x76\xf2\xeb\xa6\xc6\x4d\x7d\x54\x2a\x69\xad\x41\xc9\xf4\xc1\x67\x97\xb4\x28\x19\x2d\x4a\x1d\x5f\xa9\xe4\x55\x3c\xdc\x8b\x87\xbb\xbd\x97\xf6\xc0\x2b\x35\x00\xca\x35\x16\x92\xea\xe6\x68\xa0\x4a\x32\xda\xdb\x8f\x86\x37\xe6\xa7\xf1\x1b\x7e\xfe\xed\xf7\x57\xe7\x19\xfd\xf6\x72\xcf\x7c\xfd\x70\x43\xe9\x78\x96\xc9\x6b\x64\x4d\x3d\x7e\x81\xbb\xff\xdf\x4c\x8f\x7f\x2d\x77\x8f\x06\x90\x4a\xa1\x94\x90\xb4\xa0\xfc\x68\x40\xb8\xe0\x4d\x25\x8c\x1a\x4c\x0e\x13\x2f\xf3\x5f\x2a\x3e\x23\xbc\x30\xa4\x40\x95\xa8\x12\x19\xfb\x81\x12\x7c\xf1\xe9\xc3\x78\xf9\x36\xdd\x3f\x79\x97\xcb\x8b\x8f\xa7\x1f\x87\xa6\xfe\xfa\xd3\x5e\xc3\xaf\xbe\xfc\xdf\xf1\x57\x55\xfc\x34\xfb\xb2\x3f\xbe\xbc\xbc\xd1\xf8\x30\x25\xfe\x8a\x68\xb8\x53\x25\xcf\x2d\xc9\x30\x27\x86\xe9\x55\x1c\x6c\xaa\x74\x93\x1a\xfe\xfd\x92\x0f\x19\x2b\x8e\x4f\xc9\xd9\xc5\xbb\xe6\x46\xfe\xfa\xf2\xf3\xe5\xd9\xd5\xd7\xd1\xef\xb5\x59\xbe\xbf\xf9\xbc\xf8\x46\xd5\xa7\x85\x78\x79\xbf\x4a\x90\x4c\x60\xe5\x91\x49\xc9\xae\x54\x4c\x39\xd5\xef\x5b\xd9\x28\x2f\x3e\xf1\x73\x41\xb2\x67\xdb\xaf\x7b\xea\x27\xfe\x82\x1f\xce\x44\xd6\x40\xca\x88\x52\x47\x83\x2e\xac\xed\x4b\x07\x02\xc3\xf6\x16\x95\x43\xfb\x38\x9a\x7c\x29\x89\x06\xaa\x40\x97\xd4\xbe\x1d\x4d\xb6\x0e\xeb\xc9\xb4\xa4\xca\xbe\x24\xa0\x2a\xc2\x18\x28\xd4\x20\x72\xb8\x41\x29\xa2\x54\xf0\x9c\x16\x46\x12\x0b\x45\x70\xfa\xf1\x12\x8c\xa6\x8c\x6a\x8a\x0a\x72\x21\x81\x28\x45\x95\x15\x12\x28\x87\x0c\x35\xa6\x8e\x90\xf0\x0c\x70\x59\x33\x41\xb5\xdf\x29\x72\xb8\xbc\xfc\xed\x5d\x24\x91\x11\x8d\x19\xcc\x0d\xb3\x30\x30\x0b\xbc\x62\x38\xd3\x50\x4b\x31\xa7\x19\x2a\x40\xa2\x1a\xd0\x02\x8c\x42\x77\xa4\xc4\x19\xe5\x99\x3d\xc4\x1f\xde\xec\x00\x51\xb0\x40\xc6\xec\x7f\x02\x0b\xe2\xc8\x0b\xd4\x20\x51\x09\x36\x27\x33\x86\xee\xa7\x91\xa9\xfd\x91\x0a\x99\x29\x58\x50\x5d\x02\xe1\x0d\x14\x74\x8e\xbc\x45\x1f\x15\x1f\x26\x75\xb0\x03\x82\x16\x82\x41\x26\x50\x01\x17\x1a\xb0\xaa\x99\x68\xdc\x1e\x2e\xe6\xc8\x40\x63\x5a\x72\xfa\xdd\xa0\x72\x2a\x52\x4f\x66\xdc\x2b\x6b\x01\x4b\xa9\x90\x2b\x8c\xe1\x98\x31\xc8\x91\x68\x23\x2d\xb1\x44\xd0\x92\xce\x29\x61\x56\x52\x5a\xd5\x0c\x2b\xe4\xda\x71\x49\x09\x87\x19\x5a\xad\x29\x6b\x20\x17\xc6\x72\xe6\x20\x74\x89\x12\x14\xad\x28\x23\xd2\x09\x76\x5b\x54\x85\x72\x4e\x53\xb4\x42\xa4\x46\x4a\xe4\x9a\x35\x20\x0d\x07\xa2\x41\x97\x08\x87\xa9\xc8\x3a\x18\x75\xbf\x21\x13\x15\xa1\x1c\x9e\x39\xd9\xb5\x7a\x0a\xca\xcc\xfc\x3b\xb5\xdd\xf1\x3e\xcb\xa1\x11\xe6\xa9\xb4\x86\x23\xce\xea\x36\x5a\x40\x70\xf0\x20\xb9\xd3\x2e\x17\xc2\x2d\x0a\x28\xc9\x1c\x61\x8e\xb2\x81\x92\xc8\x0c\x34\xad\xac\xb6\x4d\x58\x55\xc8\xf2\xa8\x14\x4a\x03\xd5\x31\x58\xc9\xad\x30\x56\x6c\x55\x52\xad\x1b\xeb\x43\x87\x1e\x70\xa9\x89\xd4\xde\x4d\x5e\xf8\xe0\xb9\xb8\x10\xad\x06\x56\x72\xbf\x56\x35\x19\xef\xad\xc4\x70\x61\x18\x03\x89\xd6\x39\xda\x5b\x7c\x81\x2c\x15\x15\xc2\xc1\xb6\xd7\xad\x1c\x4d\x3e\x2b\x52\x60\x88\xfc\xf2\xf9\xe4\x38\xf2\x47\x1c\x26\xe5\xf3\x9e\xf2\xb0\x20\x5c\xb7\x21\x45\x42\x00\x81\xb6\x97\xc7\x07\x18\x2a\xbb\x4a\x38\x9c\x5d\xec\xb8\x30\xb5\x06\xcf\x05\x63\x62\x61\xb5\xee\xcc\x7a\xd0\x1a\x35\xc8\x4c\xae\x31\x7a\xc2\xf4\xeb\xb3\x8b\x27\x85\x7e\x1d\x49\x19\xf7\xfd\xd3\x12\xbf\x13\x12\x70\x49\x6c\x90\xec\xb4\x3e\xeb\x31\x18\xc6\xa3\x78\x1c\x3f\x5f\xdf\x7d\x4b\xb4\xe0\x7c\x4f\x19\x08\x5a\x61\x24\xb6\x88\xe1\x50\x7b\x10\x84\xfb\x5f\x70\x4e\x8a\x34\x1c\xc3\x9d\xe7\x6c\xdd\xf9\x16\x4a\x7b\x07\xb3\x4c\xa2\x52\x10\x16\xb7\x56\x0a\x49\x74\x2a\x7d\x13\xc6\xc5\xb9\xb5\x55\x46\x54\x89\x0a\x28\x57\x1a\x49\x66\xa1\x21\x13\xd6\x63\x0a\x98\xe0\x85\xfd\x6f\xad\x79\x76\x61\x43\x64\x4e\x18\xcd\x1e\x2d\x78\x34\x8a\xc6\xd1\x86\xe0\x6b\x6f\x1f\x27\x78\xcd\x48\x8a\xa0\x6c\x38\x85\xeb\x5e\x4b\xcc\xe9\x32\x51\x26\xcf\xe9\x12\x66\x98\x0b\x89\x3d\x37\xb5\x5e\xb1\x20\x99\x6b\x94\x6d\x48\xcb\x76\xe1\x99\xd7\x5a\x22\x10\x1b\x37\x98\x6d\x3f\x42\x4f\x12\xfb\xe3\xa3\x35\xd5\x22\xc2\xb3\x98\x44\x5e\xa8\xa0\xfd\x23\x68\x1f\x66\x93\x0f\x86\x69\x5a\xb3\x15\xb2\x06\x04\x53\x58\x13\xe9\xe0\x7d\xd6\x04\x75\xed\x19\xd1\x1f\x8d\xbf\x20\xa9\x65\xb1\x17\xed\x47\x2f\xa2\x97\xf7\xb8\xf4\x2e\x8a\x3b\x55\x79\xdc\xae\xbd\x78\x3f\x7e\x11\xbf\x5c\x37\x40\xf9\x7c\x72\x2b\x2b\xad\xc0\x83\xbb\xc8\x75\x89\x65\xa9\xdb\x9c\x07\x33\x53\xa8\x9d\xb5\x44\xe6\xd2\xad\xcd\x60\xd1\x35\x17\x0b\xbe\x4a\x2c\xa0\x89\x2c\xd0\x65\xd4\xe9\xa7\x93\xe9\xa7\xcf\xae\x02\xb5\xbc\xd6\x52\x26\x64\x46\x5a\xaa\xb3\x0b\x98\x31\x92\x5e\xb3\x90\x87\x85\x84\x45\x49\x35\x86\x67\x97\x59\xa9\x82\x1a\x65\x2e\x64\x85\x19\x18\x65\xc9\x48\x0b\x2c\xb7\x51\xcd\xe6\x30\x60\x58\x50\x6d\x19\x87\x23\x1c\xb8\x51\xa9\x74\x0b\xaf\xf0\x2c\x2d\x31\xbd\xde\x76\x70\xac\x45\x40\x3f\x39\xa3\x59\x86\x1c\x04\xc7\xfe\x4e\x85\xa9\xe0\xd9\x6a\xab\x51\xb8\x4a\x36\x53\x8b\xb1\xae\x21\xc0\x95\x48\xb6\x51\xf0\x69\xc0\x65\x9e\x19\x96\x64\x4e\x85\xbc\x13\x69\x1b\xae\xc9\xf2\x7e\x98\x1d\x7a\x9c\x75\x76\x0f\xaf\x46\x0f\x86\x5e\x7b\x54\x5f\xa4\xbb\x30\xd8\x73\x1e\xee\xbf\x8a\x47\x7b\xcf\xbb\xff\xeb\xd0\xbc\xa0\xb6\x1a\x08\x26\x74\xa6\xbe\x0f\xa4\xbd\x49\x4b\xe4\x3d\x02\xcf\x34\x0e\xff\xff\x2c\x9a\xff\x58\xe2\xad\xc7\x10\xdf\x79\xc7\xfe\x0b\x27\xdf\x36\xd0\x26\x60\xd9\xa2\x83\x89\x82\xa6\x36\x96\xa8\x37\x70\x5b\x9c\xb9\xab\xa8\x42\x48\xa9\x60\x55\xc3\x5a\xa3\x52\x9e\x4a\x57\xaa\x11\xd7\x57\x33\x3a\xa1\xb9\xdd\xee\xca\x0b\x89\xc0\xc5\xaa\xe6\x70\x37\x81\xaa\x36\x66\xc2\x1d\x60\x44\x69\xd8\x0b\xd7\x40\xed\x00\xd5\x4f\x55\x1b\x05\xab\xdb\xe3\x62\xe3\xec\xe2\xf5\x61\xc2\xa8\x3f\xc7\xd5\x7f\x0b\xaa\xf0\x9e\x2d\xe1\x5e\x09\x8e\x71\xd8\x94\x18\xb6\x91\x6c\x3d\xf4\xa3\xda\x4c\x50\x51\x3f\xe2\x42\x16\xeb\x67\xaa\x68\x95\xaa\x6c\x35\x2a\x33\x94\xae\x28\xb7\x30\x45\x18\xbd\xc1\x8d\xfb\xf1\x0c\xe3\x22\x0e\xbb\x6f\xa5\x9c\x7f\xe7\xd3\x5b\x39\x28\x1c\xba\xed\x6b\x45\x5b\x4c\x0a\x13\x12\x65\x9b\x60\x5c\xeb\x81\x24\x2d\xfb\xc7\xaf\x15\xb0\xc0\xd1\xdb\x2a\x2d\x09\x2f\x82\xb0\xbe\xab\x5b\x79\xa3\x65\xff\x67\xa1\x25\x17\xd2\xbe\xb4\x4d\xa2\x9c\x13\xe6\x56\x1e\x80\x36\x0b\x17\x47\x9e\xf3\xfa\xfe\xce\xf6\xca\x55\x1d\xba\x74\xb1\x44\xaf\xbb\xc2\x7e\xb7\x43\x97\x67\xc3\xdd\x56\xa1\x6d\x8b\xff\x9e\x60\xaf\xea\xd6\xf7\xa0\xa2\xdc\x68\xdc\xa8\xf2\x83\x91\x6c\x0a\x18\x74\x59\x03\xb3\x81\x05\xff\x67\x8b\x92\xa6\xa5\x3d\xff\xec\x62\xe8\x42\xc0\x74\xd8\xa8\xb6\x6d\xbe\x97\xa8\x8d\xe4\x98\x41\xd5\x16\x04\xd6\x9c\x5d\xa8\x75\xd9\xee\x3f\x60\x5d\x17\xa8\x23\x77\xdc\xa3\x61\xfd\x5e\x18\xcf\x85\x1c\xef\xaa\x3e\xeb\xe1\xe8\x45\xbc\x1b\xef\xc6\xc3\xbb\x11\xbd\xc5\xf2\xae\x3e\x5f\xc3\x72\x7f\xab\xf5\x42\x78\xc3\xec\xac\xc0\xfd\x9e\xed\xed\x71\x1d\x03\x21\x81\xdb\x5a\x62\xdc\x79\x38\x78\xd0\x36\x2f\xc7\xc7\x1b\xfd\xcb\x54\x38\xcc\x05\x53\xdf\x97\xe1\x05\x67\x4d\xd7\xbc\xcc\xf7\x5b\x10\x7d\x9c\x8f\x68\x1d\xcd\xf7\x1f\xd0\xc9\x9c\x08\x26\xb8\x82\xca\x28\xed\x03\xc6\x95\xd1\x99\x4f\xee\x0c\xf5\x0a\x6d\xd2\xae\x8f\x3b\x56\x40\xd8\x82\x34\x6a\x07\x24\xe1\x99\xa8\x02\x86\xf5\x71\x2a\x14\x9c\x46\xe1\x23\x9a\x83\xe3\xe3\x63\xe8\xc3\x92\x57\x62\x98\x8e\xd2\x74\xbc\x0e\x42\x5b\x0f\x25\x74\x89\xa8\x6f\x48\x18\x1e\x8c\x0e\x0e\xc6\x77\x14\x8d\x27\x1f\x8f\x3f\xbc\x55\x9d\xab\xde\x34\x2d\x1e\xed\x80\xe1\x35\x91\xca\x8d\x2d\x02\x9b\x30\x34\x48\x05\x57\x34\x43\x89\x99\x4d\x52\x9e\xc3\xc3\x34\x76\x92\x87\x98\x8f\x53\x51\xad\xe5\xd9\xbb\x56\x5c\x2a\xe4\x40\x18\x25\x7e\xba\xd3\x23\x8a\xb7\xe2\x38\xbe\x23\xb3\x0a\x4b\x98\xf6\x8a\x37\x2d\xac\x67\x88\x97\x75\xc7\xaa\xd3\x7a\xd8\x82\x74\x97\x74\xbc\x7d\x1f\x5b\xc4\x78\x1e\xf7\x6b\x75\xff\xfa\x1f\xd0\xed\xa3\xd0\xe8\x2f\x8f\xb7\xbb\x8b\x5a\x61\x34\x74\x8d\xdb\x6d\xef\xac\x86\x29\x3e\xbe\x0d\x6f\xa7\x5d\x5e\x1b\x65\x66\xb1\x2a\xe3\x2b\x5c\x1f\xc7\x28\x6d\x6a\x9a\xad\xa6\x42\x7e\x64\x96\xa1\x26\x94\x6d\xef\x40\x87\xc3\xb5\x14\x33\x32\x63\x8d\x1b\x3a\x2d\xac\x60\xed\xac\xe2\xb1\x76\x64\x22\x25\xcc\xbe\x5b\xb3\xdf\xe6\xfb\x0d\xbb\x75\x24\x71\xa7\xcf\x86\xed\xca\xe7\x93\x4f\x6e\x7a\xd5\x4e\x4e\x9a\x1a\x55\x7f\xc6\x62\x71\xc6\x67\xb4\x19\xea\x05\x22\xbf\xaf\x2e\xd9\x2c\x45\x6c\xe3\xd4\x5d\x16\xcf\xdf\x16\x48\x76\xa1\xcb\x47\x6e\x32\xc9\x9b\xae\x75\x0a\x15\x5a\xfc\x50\x2b\x4d\xbf\x4e\xbd\x9d\x66\x8c\x94\xf6\x6f\xcd\x4c\x1b\xaf\x21\x43\x3f\x9a\xa5\xb6\xb2\xb7\x80\xfd\xe4\xbb\x11\xfa\x75\x4b\xe8\x9f\xee\x30\xd3\x7b\x5c\x02\xf2\x54\xdc\xea\x23\xdb\xfa\xcd\x2d\xe0\xaa\xa7\xe4\x5a\x59\x6d\xba\x81\x14\xe5\x50\xa2\xc7\x45\x7b\xcd\x48\xb0\x56\x89\xcb\xb5\x6b\x76\xab\xae\xeb\xdb\xf8\xb1\x71\x63\x59\x8f\x87\x23\x1c\x8f\x46\x38\x1e\x8f\x70\xbc\x5e\xbe\xff\x80\xe0\x21\xb3\x85\xf2\xb9\xbf\x75\x61\xd6\x3c\x9d\x9e\xaf\xc2\xe6\x52\x54\x7e\xe8\x89\x52\xb9\x11\x2d\x7f\xaa\xbb\x41\x5d\x49\x78\xc6\xd0\xcd\xac\xed\x2e\x97\x69\xdc\x5c\xf9\x34\x94\x7c\xf6\x25\x55\x30\x74\xb1\x31\x08\xb3\xd3\x01\xb4\x17\xd6\xda\x70\xd7\xad\xb9\xb2\x5b\xad\xd7\x49\xed\x39\xa1\x98\x9c\x4e\xcf\xfb\xd0\xa6\x50\xbb\x64\xc8\x4d\x35\x43\xe9\x12\xa2\xd6\x6c\x15\xc7\x8d\x2f\xf4\x28\x5f\x2f\x99\x57\xc9\xfc\x5c\x14\x30\xa7\xb8\xe8\xc7\x41\x68\x5b\x9c\xcf\x19\x0b\x13\x84\xd0\x6b\x58\x38\x30\x33\x46\x53\x57\x26\x4b\xf4\x23\xe6\x5b\xe9\x1b\x79\x56\x0b\xca\xf5\x43\x9a\x9a\x43\xd2\xfb\x76\x72\x90\x24\xce\x63\x89\x6d\x5d\x06\x93\x8d\x57\x87\x09\x99\xc0\x3f\xff\xfe\x0f\x37\x48\x57\xbe\xc1\x19\xee\xee\x76\xc2\xad\x7a\x98\xdb\x5b\x45\xe1\x76\x11\x0e\x94\xe7\x94\x53\x6d\xd5\xf3\x23\xe6\x9a\x14\xa1\xe5\x0f\xb3\x6c\xa7\x78\x98\x2f\xed\xf4\xeb\x5e\x0b\x8a\x10\xe5\x5d\xb9\x70\x66\x2f\x46\xe6\xe6\x1a\x96\x87\x85\x01\xc3\xb9\xe5\x19\xd2\x8e\x91\x0c\xd6\xe5\xe8\x35\x36\x04\x34\xca\x8a\x72\xc2\x2c\xd0\x32\xeb\x1e\xbb\xb9\xf1\xd5\x6e\x8d\x92\x56\xe1\x2b\xc1\x7d\x4a\xfd\x5c\x48\xac\x8f\xac\xff\x25\x16\xb8\xac\xad\xff\x9d\xa2\xca\x36\x45\x36\xe8\x67\x62\x8e\x3b\x30\x33\x1a\x54\x29\x16\xbe\x04\xab\x88\x4e\x43\x4d\xcf\x51\xdd\xea\xe0\xca\xd1\xe4\x44\x70\x4d\x52\xad\xe0\x09\xa9\xea\xd7\xf0\xee\xf8\xd7\xee\x73\x4d\x88\x48\x37\x74\xb7\x20\xe7\x6c\x4e\x6d\x99\x25\x24\x28\x53\x14\xed\x23\xe5\xb6\xec\xcf\x76\x20\x47\x64\x90\x4b\x74\x43\x87\xd4\x73\x86\x0a\x61\x4e\x09\xdc\x72\xbc\x3a\x48\x12\x1d\x57\x98\x70\xc4\x25\x56\x94\x0d\x26\xbf\xb4\x3f\x9d\xd3\x05\x87\x29\x32\x2c\x24\xa9\x5c\xa3\xb1\xb1\x79\x41\x6d\x4d\xe7\x3e\xb4\xd9\x4d\x7f\x63\x28\x39\xca\xc1\xe4\x97\xde\x53\xc7\x29\x10\x77\x77\xe0\xcc\x7f\x98\xf2\x1f\x61\x9c\xbc\xeb\x40\xee\x7c\xfc\xf3\x0a\x12\x8c\xec\x5d\xa1\x37\x26\x64\x45\x9a\xc3\x99\x2b\x67\xa9\x6e\x9b\x70\x37\xb8\xa5\x8c\x61\x41\x18\x90\x6c\x8e\xdc\xf5\xfe\x42\xc2\xe9\xa9\xb8\xb4\x84\xfe\xeb\x10\x94\xa6\x40\x20\x95\x30\xdc\x0d\xf0\xb4\x24\x79\x4e\xd3\x9f\xfb\x77\x52\xf9\xcb\x46\x16\xb9\x61\x40\x33\x24\x2a\xa4\xe8\x33\xc8\x84\x05\x25\x1b\xad\x3d\xad\x9e\xce\xfd\xa7\x94\x00\xe4\x19\x3a\xb4\x71\xfe\x4b\x05\x4f\x99\xc9\xda\x1e\x2c\x7c\x58\x21\xc0\x85\x98\xb5\x93\x3b\xd7\xeb\x97\x54\x6b\x8a\xca\x7d\x24\x73\xd6\xc7\xb9\xb3\x5c\x87\x8d\x52\x36\xe1\xc8\x64\x26\xb2\x66\x72\xe8\x3e\xe6\x4f\xb6\xfe\x15\x00\x00\xff\xff\x6f\xa2\x15\x79\xb0\x20\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/index.html"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
